

services:
  app:
    build:
      context: backend
      dockerfile: Dockerfile.app
    container_name: fastapi
    ports:
      - 8000:8000
    depends_on:
      - mongo
      - redis
      - nginx 
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB=tg_test
      - MAX_CONNECTIONS_COUNT=15
      - MIN_CONNECTIONS_COUNT=7
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
    networks:
      - app_network

  bot:
    build:
      context: bot
      dockerfile: Dockerfile.bot
    container_name: telegram_bot
    depends_on:
      - app
      - nginx
    environment:
      - API_URL=http://nginx:80
      - TG_API_TOKEN=
    networks:
      - app_network
    
  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongo_database:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app_network
  
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
  
volumes:
  mongo_database:

networks:
  app_network:
  


